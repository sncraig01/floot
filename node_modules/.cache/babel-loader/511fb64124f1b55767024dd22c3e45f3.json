{"ast":null,"code":"var _jsxFileName = \"/Users/sarahcraig/Desktop/projects/drinking_game/src/PlayGame.js\";\nimport React from 'react';\nimport './App.css';\nimport Button from '@material-ui/core/Button';\n\nclass PlayGame extends React.Component {\n  constructor(..._args) {\n    super(..._args);\n    this.state = {\n      ptp_list: this.props.location.state.ptp_list,\n      displayed_q: '',\n      // %\n      questions: [{\n        text: '{} and {} need to do a funny dance.',\n        ptps_needed: 2\n      }, {\n        text: 'If your name is {}, drink.',\n        ptps_needed: 1\n      }, {\n        text: '{}, say one reason why you like {}. And then give out 3 drinks.',\n        ptps_needed: 2\n      }, {\n        text: 'Name a celebrity you think is overrated. If you agree, drink. {} starts.',\n        ptps_needed: 1\n      }, {\n        text: '{} choose a number between 1 and 10. {} and {} both guess what that number is. The loser drinks 4 times.}',\n        ptps_needed: 4\n      }]\n    };\n\n    this.componentDidMount = () => {\n      this.displayRandomQuestion();\n    };\n\n    this.formatString = (str, args) => {\n      let return_str = str;\n\n      for (let i = 0; i < args.length; i++) {\n        return_str = return_str.replace('{}', args[i]);\n      }\n\n      return return_str;\n    };\n\n    this.chooseRandomPtps = n => {\n      let ptps = this.state.ptp_list;\n      let random_nums = [];\n\n      while (random_nums.length < n) {\n        var item = ptps[Math.floor(Math.random() * ptps.length)];\n\n        if (!random_nums.includes(item)) {\n          random_nums.push(item);\n        }\n      }\n\n      return random_nums;\n    };\n\n    this.displayRandomQuestion = () => {\n      let random_q = this.state.questions[0];\n\n      if (random_q.ptps_needed > this.state.ptp_list.length) {// CHOOSE A DIFFERENT RANDOM Q\n      }\n\n      let random_ptps = this.chooseRandomPtps(random_q.ptps_needed);\n      let filled_q = this.formatString(random_q.text, random_ptps);\n      console.log(\"filled q: \");\n      console.log(filled_q);\n      this.setState({\n        displayed_q: filled_q\n      });\n    };\n\n    this.completeQuestion = () => {\n      this.displayRandomQuestion();\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Question\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }\n    }, \" \", this.state.displayed_q), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Done-Button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: this.completeQuestion(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }\n    }, \" Done \")));\n  }\n\n}\n\nexport default PlayGame;","map":{"version":3,"sources":["/Users/sarahcraig/Desktop/projects/drinking_game/src/PlayGame.js"],"names":["React","Button","PlayGame","Component","state","ptp_list","props","location","displayed_q","questions","text","ptps_needed","componentDidMount","displayRandomQuestion","formatString","str","args","return_str","i","length","replace","chooseRandomPtps","n","ptps","random_nums","item","Math","floor","random","includes","push","random_q","random_ptps","filled_q","console","log","setState","completeQuestion","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport Button from '@material-ui/core/Button';\n\n\n\nclass PlayGame extends React.Component {\n\n  state = {\n    ptp_list : this.props.location.state.ptp_list,\n\n    displayed_q : '',\n\n    // %\n    questions : [ \n      { text : '{} and {} need to do a funny dance.', ptps_needed : 2 },\n      { text : 'If your name is {}, drink.', ptps_needed : 1 },\n      { text : '{}, say one reason why you like {}. And then give out 3 drinks.', ptps_needed : 2 },\n      { text : 'Name a celebrity you think is overrated. If you agree, drink. {} starts.', ptps_needed : 1 },\n      { text : '{} choose a number between 1 and 10. {} and {} both guess what that number is. The loser drinks 4 times.}', ptps_needed : 4 }\n    ]\n  }\n\n  componentDidMount = () => {\n    this.displayRandomQuestion()\n  }\n\n  formatString = ( str, args ) => { \n    let return_str = str\n    for ( let i = 0; i < args.length; i++ ){\n      return_str = return_str.replace( '{}', args[i] )\n    }\n    return return_str\n  }\n\n  chooseRandomPtps = ( n ) => {\n    let ptps = this.state.ptp_list\n\n    let random_nums = []\n    while (random_nums.length < n) {\n      var item = ptps[Math.floor(Math.random() * ptps.length)];\n      if ( !random_nums.includes( item ) ){\n        random_nums.push( item )\n      }\n    }\n\n    return random_nums\n  }\n\n  displayRandomQuestion = () => {\n    let random_q = this.state.questions[0]\n\n    if (random_q.ptps_needed > this.state.ptp_list.length) {\n      // CHOOSE A DIFFERENT RANDOM Q\n    }\n\n    let random_ptps = this.chooseRandomPtps( random_q.ptps_needed )\n\n    let filled_q  = this.formatString( random_q.text , random_ptps )\n\n    console.log( \"filled q: \")\n    console.log( filled_q )\n    this.setState( {displayed_q : filled_q} )\n  }\n\n  completeQuestion = () => {\n    this.displayRandomQuestion()\n  }\n\n  render(){\n    return (\n      <div className=\"App\" >\n        <div className=\"Question\"> { this.state.displayed_q }</div>\n        <div className=\"Done-Button\"> \n          <Button onClick={this.completeQuestion()}> Done </Button>\n        </div>\n      </div>\n    );\n  }\n\n}\n\nexport default PlayGame;\n"]},"metadata":{},"sourceType":"module"}